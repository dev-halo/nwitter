{"version":3,"sources":["fbase.js","components/AuthForm.js","components/AuthSocialForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","AuthSocialForm","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Auth","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","docRef","doc","id","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","alt","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fbea43c.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  doc,\r\n  getDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getStorage, ref } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth(app);\r\n\r\nexport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n};\r\n\r\nexport const dbService = getFirestore(app);\r\n\r\nexport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  doc,\r\n  getDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n};\r\n\r\nexport const storageService = getStorage(app);\r\n\r\nexport { ref };\r\n","import {\r\n  authService,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"eamil\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  authService,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"fbase\";\r\n\r\nconst AuthSocialForm = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onSocialClick} name=\"google\">\r\n        Continue with Google\r\n      </button>\r\n      <button onClick={onSocialClick} name=\"github\">\r\n        Continue with Github\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSocialForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport AuthSocialForm from \"components/AuthSocialForm\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <AuthSocialForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, deleteDoc, doc, storageService, updateDoc } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      const docRef = doc(dbService, `nweets/${nweetObj.id}`);\r\n      await deleteDoc(docRef);\r\n\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const docRef = doc(dbService, `nweets/${nweetObj.id}`);\r\n    await updateDoc(docRef, { text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              alt=\"attachment\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, collection, addDoc, storageService, ref } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDownloadURL, uploadString } from \"@firebase/storage\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    await addDoc(collection(dbService, \"nweets\"), {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} alt=\"attachment\" width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService, collection, onSnapshot } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","//import { where, orderBy, query, getDocs } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import Nweet from \"components/Nweet\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  //const [nweets, setNweets] = useState([]);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  // const getMyNweets = async () => {\r\n  //   const ref = await collection(dbService, \"nweets\");\r\n  //   const q = query(\r\n  //     ref,\r\n  //     where(\"creatorId\", \"==\", userObj.uid),\r\n  //     orderBy(\"createdAt\", \"asc\")\r\n  //   );\r\n  //   var nweets = await getDocs(q);\r\n\r\n  //   const newArray = nweets.docs.map((document) => ({\r\n  //     id: document.id,\r\n  //     ...document.data(),\r\n  //   }));\r\n  //   setNweets(newArray);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div> */}\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 My Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService, onAuthStateChanged } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => updateProfile(user, args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => updateProfile(user, args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}