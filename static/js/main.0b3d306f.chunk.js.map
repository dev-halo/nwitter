{"version":3,"sources":["fbase.js","components/AuthForm.js","components/AuthSocialForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","AuthSocialForm","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","style","marginBottom","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","docRef","doc","id","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","alt","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b3d306f.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  doc,\r\n  getDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getStorage, ref } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth(app);\r\n\r\nexport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n};\r\n\r\nexport const dbService = getFirestore(app);\r\n\r\nexport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  doc,\r\n  getDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n};\r\n\r\nexport const storageService = getStorage(app);\r\n\r\nexport { ref };\r\n","import {\r\n  authService,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await createUserWithEmailAndPassword(authService, email, password);\r\n      } else {\r\n        await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"eamil\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  authService,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"fbase\";\r\n\r\nconst AuthSocialForm = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authBtns\">\r\n      <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n        Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n      </button>\r\n      <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n        Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSocialForm;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport AuthSocialForm from \"components/AuthSocialForm\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <AuthSocialForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, deleteDoc, doc, storageService, updateDoc } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      const docRef = doc(dbService, `nweets/${nweetObj.id}`);\r\n      await deleteDoc(docRef);\r\n\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const docRef = doc(dbService, `nweets/${nweetObj.id}`);\r\n    await updateDoc(docRef, { text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newNweet}\r\n              required\r\n              placeholder=\"Edit yout nweet\"\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              alt=\"attachment\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, collection, addDoc, storageService, ref } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDownloadURL, uploadString } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    await addDoc(collection(dbService, \"nweets\"), {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{ backgroundImage: attachment }}\r\n            alt=\"attachment\"\r\n          />\r\n          <div className=\"factory__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService, collection, onSnapshot } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { orderBy, query } from \"@firebase/firestore\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var ref = collection(dbService, \"nweets\");\r\n    var q = query(ref, orderBy(\"createdAt\", \"desc\"));\r\n    onSnapshot(q, (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","//import { where, orderBy, query, getDocs } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import Nweet from \"components/Nweet\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  //const [nweets, setNweets] = useState([]);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      setNewDisplayName(\"\");\r\n    }\r\n  };\r\n\r\n  // const getMyNweets = async () => {\r\n  //   const ref = await collection(dbService, \"nweets\");\r\n  //   const q = query(\r\n  //     ref,\r\n  //     where(\"creatorId\", \"==\", userObj.uid),\r\n  //     orderBy(\"createdAt\", \"asc\")\r\n  //   );\r\n  //   var nweets = await getDocs(q);\r\n\r\n  //   const newArray = nweets.docs.map((document) => ({\r\n  //     id: document.id,\r\n  //     ...document.data(),\r\n  //   }));\r\n  //   setNweets(newArray);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService, onAuthStateChanged } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => updateProfile(user, args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => updateProfile(user, args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}